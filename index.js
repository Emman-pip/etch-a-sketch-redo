(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>c});var t=e(537),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([n.id,"* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  --main-color: #b6b65a;\n  --secondary-color: #f9efe6;\n  --tertiary-color: #9e7e59;\n  --additional-color: whitesmoke;\n}\n\nbody {\n  background-color: var(--additional-color);\n}\n\n.gridContainer {\n  width: 35vw;\n  height: 35vw;\n  display: flex;\n  flex-direction: column;\n}\n\n.row {\n  display: flex;\n  width: fit-content;\n  height: fit-content;\n}\n\n.cells {\n  padding: 0;\n  outline: 1px solid black;\n  background-color: var(--main-color);\n}\n\n.titleBar {\n  height: 10vh;\n  background: var(--main-color);\n  padding: 1rem;\n}\n\n.title {\n  color: var(--secondary-color);\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n.mainContainer {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  padding-top: 2vh;\n  padding-bottom: 4vh;\n}\n\n.slider {\n  width: 20vw;\n  -webkit-appearance: none;\n  appearance: none;\n  background-color: var(--main-color);\n  border-radius: 10px;\n  height: 5px;\n}\n\n.slider::-webkit-slider-thumb {\n  background-color: var(--tertiary-color);\n  appearance: none;\n  height: 10px;\n  width: 10px;\n  border-radius: 100px;\n}\n\n.slider::-moz-range-thumb {\n  background-color: var(--tertiary-color);\n  appearance: none;\n  height: 10px;\n  width: 10px;\n  border-radius: 100px;\n}\n\n.color {\n  -webkit-appearance: none;\n  appearance: none;\n  padding: 0;\n  margin: 0;\n  border: none;\n  -webkit-appearance: none;\n  appearance: none;\n  background-color: none;\n  width: 2rem;\n  height: 2rem;\n  cursor: pointer;\n}\n.color.color::-webkit-color-swatch-wrapper {\n  -webkit-appearance: none;\n  padding: 0;\n  background-color: none;\n}\n\n.color::-webkit-color-swatch {\n  border-radius: 1000px;\n}\n\n.cacc {\n  display: flex;\n  gap: 2rem;\n  justify-content: center;\n  align-items: center;\n}\n\nbutton {\n  -webkit-appearance: none;\n  border: 1px solid black;\n  height: 2rem;\n  width: 4rem;\n  background-color: var(--tertiary-color);\n}\n\nbutton:active {\n  -webkit-appearance: none;\n  border: 1px solid rgb(121, 121, 121);\n  height: 2rem;\n  width: 4rem;\n  background-color: var(--main-color);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,SAAS;EACT,UAAU;EACV,qBAAqB;EACrB,0BAA0B;EAC1B,yBAAyB;EACzB,8BAA8B;AAChC;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,wBAAwB;EACxB,mCAAmC;AACrC;;AAEA;EACE,YAAY;EACZ,6BAA6B;EAC7B,aAAa;AACf;;AAEA;EACE,6BAA6B;EAC7B,yCAAyC;AAC3C;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,SAAS;EACT,mBAAmB;EACnB,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,wBAAwB;EACxB,gBAAgB;EAChB,mCAAmC;EACnC,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,uCAAuC;EACvC,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,oBAAoB;AACtB;;AAEA;EACE,uCAAuC;EACvC,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,oBAAoB;AACtB;;AAEA;EACE,wBAAwB;EACxB,gBAAgB;EAChB,UAAU;EACV,SAAS;EACT,YAAY;EACZ,wBAAwB;EACxB,gBAAgB;EAChB,sBAAsB;EACtB,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;AACA;EACE,wBAAwB;EACxB,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;EACxB,uBAAuB;EACvB,YAAY;EACZ,WAAW;EACX,uCAAuC;AACzC;;AAEA;EACE,wBAAwB;EACxB,oCAAoC;EACpC,YAAY;EACZ,WAAW;EACX,mCAAmC;AACrC",sourcesContent:["* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n  --main-color: #b6b65a;\r\n  --secondary-color: #f9efe6;\r\n  --tertiary-color: #9e7e59;\r\n  --additional-color: whitesmoke;\r\n}\r\n\r\nbody {\r\n  background-color: var(--additional-color);\r\n}\r\n\r\n.gridContainer {\r\n  width: 35vw;\r\n  height: 35vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.row {\r\n  display: flex;\r\n  width: fit-content;\r\n  height: fit-content;\r\n}\r\n\r\n.cells {\r\n  padding: 0;\r\n  outline: 1px solid black;\r\n  background-color: var(--main-color);\r\n}\r\n\r\n.titleBar {\r\n  height: 10vh;\r\n  background: var(--main-color);\r\n  padding: 1rem;\r\n}\r\n\r\n.title {\r\n  color: var(--secondary-color);\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.mainContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  padding-top: 2vh;\r\n  padding-bottom: 4vh;\r\n}\r\n\r\n.slider {\r\n  width: 20vw;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  background-color: var(--main-color);\r\n  border-radius: 10px;\r\n  height: 5px;\r\n}\r\n\r\n.slider::-webkit-slider-thumb {\r\n  background-color: var(--tertiary-color);\r\n  appearance: none;\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 100px;\r\n}\r\n\r\n.slider::-moz-range-thumb {\r\n  background-color: var(--tertiary-color);\r\n  appearance: none;\r\n  height: 10px;\r\n  width: 10px;\r\n  border-radius: 100px;\r\n}\r\n\r\n.color {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: none;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  background-color: none;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  cursor: pointer;\r\n}\r\n.color.color::-webkit-color-swatch-wrapper {\r\n  -webkit-appearance: none;\r\n  padding: 0;\r\n  background-color: none;\r\n}\r\n\r\n.color::-webkit-color-swatch {\r\n  border-radius: 1000px;\r\n}\r\n\r\n.cacc {\r\n  display: flex;\r\n  gap: 2rem;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nbutton {\r\n  -webkit-appearance: none;\r\n  border: 1px solid black;\r\n  height: 2rem;\r\n  width: 4rem;\r\n  background-color: var(--tertiary-color);\r\n}\r\n\r\nbutton:active {\r\n  -webkit-appearance: none;\r\n  border: 1px solid rgb(121, 121, 121);\r\n  height: 2rem;\r\n  width: 4rem;\r\n  background-color: var(--main-color);\r\n}\r\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[r].concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],d=t.base?A[0]+t.base:A[0],l=a[d]||0,s="".concat(d," ").concat(l);a[d]=l+1;var p=e(s),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var C=o(u,t);t.byIndex=c,r.splice(c,0,{identifier:s,updater:C,references:1})}i.push(s)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=e(a[i]);r[c].references--}for(var A=t(n,o),d=0;d<a.length;d++){var l=e(a[d]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}a=A}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},237:(n,r,e)=>{e.d(r,{$_:()=>l,$i:()=>A,B8:()=>a,Gi:()=>d,PR:()=>o,Uj:()=>c,ZH:()=>s,d1:()=>t});const t=document.querySelector("body"),o=document.createElement("div");o.classList.add("mainContainer");const a=document.createElement("div");a.classList.add("titleBar");const i=document.createElement("h1");i.classList.add("title"),i.textContent="ETCH A SKETCH",a.appendChild(i);const c=document.createElement("div");c.classList.add("gridContainer");const A=document.createElement("input");A.type="range",A.min="1",A.max="100",A.value="50",A.classList.add("slider");const d=document.createElement("div");d.classList.add("cacc");const l=document.createElement("input");l.type="color",l.classList.add("color");const s=document.createElement("button");s.textContent="CLEAR"}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),e.nc=void 0,(()=>{var n=e(237),r=e(379),t=e.n(r),o=e(795),a=e.n(o),i=e(569),c=e.n(i),A=e(565),d=e.n(A),l=e(216),s=e.n(l),p=e(589),u=e.n(p),C=e(426),m={};function E(r){n.Uj.innerHTML="";const e=Number.parseFloat(getComputedStyle(n.Uj).width);console.log(e/r);for(let t=0;t<r;t++){const t=document.createElement("div");n.Uj.appendChild(t),t.classList.add("row");for(let n=0;n<r;n++){const n=document.createElement("div");n.style.width=e/r+"px",n.style.height=e/r+"px",n.classList.add("cells"),t.appendChild(n)}}document.querySelectorAll(".cells").forEach((r=>{let e=g();var t;console.log(e),function(r){n.ZH.addEventListener("click",(()=>{r.style.backgroundColor="#b6b65a"}))}(t=r),t.addEventListener("mouseenter",(()=>{let n=g();t.style.backgroundColor=n}))}))}function h(){E(n.$i.value),n.$i.addEventListener("change",(()=>{n.Uj.innerHTML="",E(n.$i.value)}))}function g(){return n.$_.value.toString()}m.styleTagTransform=u(),m.setAttributes=d(),m.insert=c().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=s(),t()(C.Z,m),C.Z&&C.Z.locals&&C.Z.locals,n.d1.appendChild(n.B8),n.d1.appendChild(n.PR),n.PR.appendChild(n.Uj),n.PR.appendChild(n.$i),n.PR.appendChild(n.Gi),n.Gi.appendChild(n.$_),n.Gi.appendChild(n.ZH),h(),window.addEventListener("resize",(()=>h()))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,